apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: factory-microgateway-template
  title: Factory Micro Gateway Template
  description: Generate the repositories required to run a new Micro Gateway on the Factory Platform
  tags:
    - factory
    - go
spec:
  owner: KL-Engineering
  type: service
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    # manifests
    - id: manifests-template
      name: Fetch manifests template
      action: fetch:template
      input:
        url: ./manifests
        targetPath: ./manifests
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}-manifests
          owner: ${{ parameters.owner }}

    - id: publish-manifests
      name: Publish manifests repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}-manifests
        sourcePath: ./manifests

    # terraform-env
    - id: terraform-env-template
      name: Fetch terraform env template
      action: fetch:template
      input:
        url: ./terraform-env
        targetPath: ./terraform-env
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}-tf-env
          owner: ${{ parameters.owner }}

    - id: publish-terraform-env
      name: Publish terraform env repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}-tf-env
        sourcePath: ./terraform-env
    
    # terraform-meta
    - id: terraform-meta-template
      name: Fetch terraform meta template
      action: fetch:template
      input:
        url: ./terraform-meta
        targetPath: ./terraform-meta
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}-tf-meta
          owner: ${{ parameters.owner }}

    - id: publish-terraform-meta
      name: Publish terraform meta repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}-tf-meta
        sourcePath: ./terraform-meta

    # terraform-svc
    - id: terraform-svc-template
      name: Fetch terraform services template
      action: fetch:template
      input:
        url: ./terraform-svc
        targetPath: ./terraform-svc
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{parameters.repoUrl}}-tf-svc
          owner: ${{ parameters.owner }}

    - id: publish-terraform-svc
      name: Publish terraform services repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{parameters.repoUrl}}-tf-svc
        repoVisibility: "internal"
        force: true
        sourcePath: ./terraform-svc

    - id: register-manifests
      name: Register manifests
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-manifests'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 
    
    - id: register-terraform-env
      name: Register terraform environment
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-terraform-env'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 
  
    - id: register-terraform-meta
      name: Register terraform meta
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-terraform-meta'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 

    - id: register-terraform-svc
      name: Register terraform services
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-terraform-svc'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 
    
  output:
    links:
      - title: Manifests Repository
        url: ${{ steps.['publish-manifests'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.['register-manifests'].output.entityRef }}
      - title: Terraform environment
        url: ${{ steps.['publish-terraform-env'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.['publish-terraform-env'].output.entityRef }}
      - title: Terraform meta
        url: ${{ steps.['publish-terraform-meta'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.['publish-terraform-meta'].output.entityRef }}
      - title: Terraform services
        url: ${{ steps.['publish-terraform-svc'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.['publish-terraform-svc'].output.entityRef }}
