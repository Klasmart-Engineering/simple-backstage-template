apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: factory-microgateway-template
  title: Factory Micro Gateway Template
  description: Generate the repositories required to run a new Micro Gateway on the Factory Platform
  tags:
    - factory
    - go
spec:
  owner: KL-Engineering
  type: service
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
        - product_name
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        product_name:
          title: Product name
          type: string
          description: The name of your Product Gateway
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    # common-infra
    - id: common-infra-template
      name: Common infrastructure
      action: fetch:template
      input:
        url: ./common-infra
        targetPath: ./common-infra
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}-manifests
          owner: ${{ parameters.owner }}
          product_name: ${{ parameters.product_name }}

    - id: publish-common-infra
      name: Publish common-infra repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}-common-infra 
        sourcePath: ./common-infra 
  
    # microgateway
    - id: microgateway-template
      name: Common infrastructure
      action: fetch:template
      input:
        url: ./microgateway-template
        targetPath: ./microgateway-template
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}-microgateway
          owner: ${{ parameters.owner }}
          product_name: ${{ parameters.product_name }}

    - id: publish-microgateway
      name: Publish microgateway repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}-microgateway
        sourcePath: ./microgateway

    # gitops-env
    - id: gitops-env-template
      name: Fetch terraform env template
      action: fetch:template
      input:
        url: ./gitops-env
        targetPath: ./gitops-env
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl + "-gitops-env"| parseRepoUrl }}
          owner: ${{ parameters.owner }}
          product_name: ${{ parameters.product_name }}

    - id: publish-gitops-env
      name: Publish terraform env repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl + "-gitops-env" }}
        sourcePath: ./gitops-env
    
    # terraform-svc
    - id: terraform-svc-template
      name: Fetch terraform services template
      action: fetch:template
      input:
        url: ./terraform-svc
        targetPath: ./terraform-svc
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl + "-tf-svc" | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          product_name: ${{ parameters.product_name }}

    - id: publish-terraform-svc
      name: Publish terraform services repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{parameters.repoUrl + "-tf-svc"}}
        repoVisibility: "internal"
        force: true
        sourcePath: ./terraform-svc

    - id: register-common-infra
      name: Register common infrastructure
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-common-infra'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 
    
    - id: register-microgateway
      name: Register microgateway
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-'microgateway].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 

    - id: register-gitops-env
      name: Register gitops environment
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-gitops-env'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 
  
    - id: register-terraform-svc
      name: Register terraform services
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-terraform-svc'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml" 
    
  output:
    links:
      - title: Common Infrastructure Repository
        url: ${{ steps.['publish-common-infra'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.['register-common-infra'].output.entityRef }}
      - title: Terraform environment
        url: ${{ steps.['publish-gitops-env'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.['register-gitops-env'].output.entityRef }}
      - title: Terraform services
        url: ${{ steps.['publish-terraform-svc'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.['register-terraform-svc'].output.entityRef }}
